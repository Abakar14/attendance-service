plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.bytmasoft'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    flatDir {
        dirs('libs')
    }
}

ext {
    springCloudVersion = '2023.0.2'
    jjwtVersion = '0.11.5'
    dotenvVersion = '4.0.0'
    openApiVersion = '2.3.0'
    mapstructVersion = '1.5.5.Final'
    securityVersion = '1.0.4'
    commonVersion = '1.3.1'
    lombokBindingVersion='0.2.0'
}

dependencies {
    //Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //Json & Security
    implementation group: 'me.paulschwarz', name: 'spring-dotenv', version: "${dotenvVersion}"


    //Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    //OpenAPI
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"

    //Custom Libraries
    implementation "com.bytmasoft:dss-common:${commonVersion}"
    implementation "com.bytmasoft:jwt-security-lib:${securityVersion}"

    //MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokBindingVersion}"

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Database
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    //Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
